#!/usr/bin/env python3
"""
Script para verificar la conectividad con la base de datos.
Solo verifica que la conexi√≥n est√© disponible.
"""

import os
import sys
import time
from sqlalchemy import text

# Agregar el directorio src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from laive.database.config import engine

def wait_for_db():
    """Esperar a que la base de datos est√© disponible."""
    max_attempts = 30
    attempt = 0
    
    while attempt < max_attempts:
        try:
            with engine.connect() as conn:
                conn.execute(text("SELECT 1"))
                print("‚úÖ Base de datos conectada exitosamente")
                return True
        except Exception as e:
            attempt += 1
            print(f"‚è≥ Intento {attempt}/{max_attempts}: Esperando conexi√≥n a la base de datos...")
            time.sleep(2)
    
    print("‚ùå No se pudo conectar a la base de datos despu√©s de 60 segundos")
    return False

def check_database_connection():
    """Verificar la conectividad con la base de datos."""
    print("üîç Verificando conectividad con la base de datos...")
    
    # Esperar a que la base de datos est√© disponible
    if not wait_for_db():
        print("‚ùå No se pudo establecer conexi√≥n con la base de datos")
        sys.exit(1)
    
    try:
        # Verificar que podemos ejecutar consultas
        with engine.connect() as conn:
            result = conn.execute(text("SELECT version()"))
            version = result.fetchone()[0]
            print(f"‚úÖ Conexi√≥n exitosa a PostgreSQL: {version}")
        
        print("‚úÖ Conectividad con la base de datos verificada correctamente")
        
    except Exception as e:
        print(f"‚ùå Error al verificar la base de datos: {e}")
        sys.exit(1)

if __name__ == "__main__":
    check_database_connection() 